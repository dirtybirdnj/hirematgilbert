// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: e53YBv4AnrBp8vNdBxkeAq
// Component: 8yzD8jiF_o-N
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: e53YBv4AnrBp8vNdBxkeAq/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 8yzD8jiF_o-N/css

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            sty.root
          )}
        >
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1___3Uyt0
            )}
          >
            <React.Fragment>
              <React.Fragment>{"I want "}</React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ textDecorationLine: "underline" }}
              >
                {"YOU"}
              </span>
              <React.Fragment>{" to hire Mat Gilbert."}</React.Fragment>
            </React.Fragment>
          </h1>

          <div className={classNames(projectcss.all, sty.columns__uvsB5)}>
            <div className={classNames(projectcss.all, sty.column__paa8P)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ixBta
                )}
              >
                {
                  "Mat Gilbert is a software developer, mad scientist and creative living in Huntington VT with his wife Monica and cat Dusty. He enjoys Fishing, Skiing and sharing outdoor adventures on the YouTube channel VT2U.\n\nMat's areas of expertise include:\nWebsite Development, Database Design, Linux systems development, administration and customization. Javascript (but not Java) and Node.js are his primary choice for backend technologies but he's been known to dabble in PHP from time to time.\n\nMost recently Mat has been investigating JAMStack solutions that allow for a responsive front-end experience decoupled from APIs and services that power fast and resilient websites."
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__vWrst)}>
              <p.PlasmicImg
                data-plasmic-name={"img"}
                data-plasmic-override={overrides.img}
                alt={""}
                className={classNames(sty.img)}
                displayHeight={"100%"}
                displayMaxHeight={"800px"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_project/images/matWhitefishjpeg.jpeg",
                  fullWidth: 1096,
                  fullHeight: 2434,
                  aspectRatio: undefined
                }}
              />
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__lrWV)}>
            <div className={classNames(projectcss.all, sty.column__r2MVd)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__fWrxx
                )}
              >
                {"Skills"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ub5Q5
                )}
              >
                {
                  "Javascript / Node.js\nData Modeling / Database Design\nUX / UI Workflow Diagraming"
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column___7Sen3)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__yMmGc
                )}
              >
                {"Recent Work"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nvoyh
                )}
              >
                {
                  "Simple MVP Website for Credit Consulting\n\nCRM solution for e-commerce\n\nCustom Strapi based API for React Frontend\n\n"
                }
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__oNlgp)}>
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__v62CF
              )}
            >
              {"What can Mat do for you?"}
            </h1>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__urJp
              )}
            >
              {
                "Application Development\n\nWeb Design Consultation\n\nDatabase Design / Data Modeling\n\nApp Prototyping\n\nFilming / Video Editing\n\nGraphic Design (Logos, Layouts, Posters etc)"
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___4Is4)}>
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__vz4S
              )}
            >
              {"What kind of work is Mat open to?"}
            </h1>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__untft
              )}
            >
              {
                "Short term contracts 1-3 months\n\nMedium Contracts 3 - 6 months"
              }
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "img"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
